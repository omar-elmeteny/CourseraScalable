version: "3.9"

volumes:
  user_management_postgres:
  redis_data:
  pg_admin_data:
  kafka_data:
  redis_insight_data:

services:
  pgdatabase:
    container_name: pgdatabase
    image: postgres:13
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=user_management
    volumes:
      - user_management_postgres:/var/lib/postgresql/data:rw
    ports:
      - "5432:5432"
    restart: on-failure

  redis:
    image: "redis:latest"
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
  redis-insight:
    image: redis/redisinsight:latest
    ports:
      - "5540:5540"
    volumes:
      - redis_insight_data:/data
  # https://hub.docker.com/r/bitnami/kafka
  kafka:
    image: "bitnami/kafka:latest"
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=LISTENER_INTERNAL://:9094,LISTENER_EXTERNAL://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=LISTENER_INTERNAL://localhost:9094,LISTENER_EXTERNAL://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,LISTENER_INTERNAL:SASL_PLAINTEXT,LISTENER_EXTERNAL:SASL_PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=LISTENER_INTERNAL
      - KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL=PLAIN
      - KAFKA_CLIENT_USERS=kafka-client
      - KAFKA_CLIENT_PASSWORDS=kafka@123
    volumes:
      - kafka_data:/bitnami/kafka
  kafkaui:
    image: provectuslabs/kafka-ui:latest
    environment:
      KAFKA_CLUSTERS_0_NAME: user_management
      KAFKA_CLUSTERS_0_PROPERTIES_SASL_MECHANISM: PLAIN
      KAFKA_CLUSTERS_0_PROPERTIES_SASL_JAAS_CONFIG: 'org.apache.kafka.common.security.plain.PlainLoginModule required username="kafka-client" password="kafka@123";'
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9094
      KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: SASL_PLAINTEXT
      KAFKA_CLUSTERS_0_PROPERTIES_SSL_TRUSTSTORE_TYPE: PEM
      AUTH_TYPE: LOGIN_FORM
      SPRING_SECURITY_USER_NAME: admin
      SPRING_SECURITY_USER_PASSWORD: admin
    restart: unless-stopped
    ports:
      - "9090:8080"

  #  spring-boot-app:
  #      image: user_management
  #      ports:
  #        - '8080:8080'
  #      depends_on:
  #          - pgdatabase
  #          - redis

  # Make sure that you close tab that were connected to pgAdmin before start the container.
  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    restart: on-failure
    volumes:
      - pg_admin_data:/var/lib/pgadmin
    depends_on:
      - pgdatabase

  loki:
    image: grafana/loki:2.9.7
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
